#include "common.h"
#include "lmodel.h"
//#include "shadow.h"

#ifndef ISAMPLE
#define ISAMPLE 0
#endif

#ifndef USE_MSAA
Texture2D							s_patched_normal;
#else // !USE_MSAA
#ifdef MSAA_OPTIMIZATION
Texture2DMS<float4>					s_patched_normal;
#else
Texture2DMS<float4, MSAA_SAMPLES>	s_patched_normal;
#endif // MSAA_OPTIMIZATION
#endif // !USE_MSAA

#ifdef MSAA_OPTIMIZATION
float4 main ( float2 tc : TEXCOORD0, float2 tcJ : TEXCOORD1, uint iSample : SV_SAMPLEINDEX ) : SV_Target
#else
float4 main ( float2 tc : TEXCOORD0, float2 tcJ : TEXCOORD1 ) : SV_Target
#endif
{
#ifndef USE_MSAA
	float Spec = s_patched_normal.Sample( smp_nofilter, tc ).a;
#else
#ifndef MSAA_OPTIMIZATION
	float Spec = s_patched_normal.Load(int3( tc * pos_decompression_params2.xy, 0 ), ISAMPLE ).a;
#else
	float Spec = s_patched_normal.Load(int3( tc * pos_decompression_params2.xy, 0 ), iSample).a;
#endif	
#endif

	float ColorIntencity = 1.f - sqrt(Spec);
	ColorIntencity = max(ColorIntencity, 0.5f);
	return float4(ColorIntencity, ColorIntencity, ColorIntencity, Spec * 7.f);
}